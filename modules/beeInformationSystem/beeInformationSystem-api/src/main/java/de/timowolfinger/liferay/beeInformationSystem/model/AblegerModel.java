/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.timowolfinger.liferay.beeInformationSystem.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Ableger service. Represents a row in the &quot;ableger&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>de.timowolfinger.liferay.beeInformationSystem.model.impl.AblegerModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>de.timowolfinger.liferay.beeInformationSystem.model.impl.AblegerImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Ableger
 * @generated
 */
@ProviderType
public interface AblegerModel extends BaseModel<Ableger> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a ableger model instance should use the {@link Ableger} interface instead.
	 */

	/**
	 * Returns the primary key of this ableger.
	 *
	 * @return the primary key of this ableger
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this ableger.
	 *
	 * @param primaryKey the primary key of this ableger
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ableger_id of this ableger.
	 *
	 * @return the ableger_id of this ableger
	 */
	public long getAbleger_id();

	/**
	 * Sets the ableger_id of this ableger.
	 *
	 * @param ableger_id the ableger_id of this ableger
	 */
	public void setAbleger_id(long ableger_id);

	/**
	 * Returns the bezeichnung of this ableger.
	 *
	 * @return the bezeichnung of this ableger
	 */
	@AutoEscape
	public String getBezeichnung();

	/**
	 * Sets the bezeichnung of this ableger.
	 *
	 * @param bezeichnung the bezeichnung of this ableger
	 */
	public void setBezeichnung(String bezeichnung);

	/**
	 * Returns the datum_ablegerbildung of this ableger.
	 *
	 * @return the datum_ablegerbildung of this ableger
	 */
	public Date getDatum_ablegerbildung();

	/**
	 * Sets the datum_ablegerbildung of this ableger.
	 *
	 * @param datum_ablegerbildung the datum_ablegerbildung of this ableger
	 */
	public void setDatum_ablegerbildung(Date datum_ablegerbildung);

	/**
	 * Returns the bienenvolk_id of this ableger.
	 *
	 * @return the bienenvolk_id of this ableger
	 */
	public long getBienenvolk_id();

	/**
	 * Sets the bienenvolk_id of this ableger.
	 *
	 * @param bienenvolk_id the bienenvolk_id of this ableger
	 */
	public void setBienenvolk_id(long bienenvolk_id);

	/**
	 * Returns the erfolgreich of this ableger.
	 *
	 * @return the erfolgreich of this ableger
	 */
	public Boolean getErfolgreich();

	/**
	 * Sets the erfolgreich of this ableger.
	 *
	 * @param erfolgreich the erfolgreich of this ableger
	 */
	public void setErfolgreich(Boolean erfolgreich);

	/**
	 * Returns the abgeschlossen of this ableger.
	 *
	 * @return the abgeschlossen of this ableger
	 */
	public Boolean getAbgeschlossen();

	/**
	 * Sets the abgeschlossen of this ableger.
	 *
	 * @param abgeschlossen the abgeschlossen of this ableger
	 */
	public void setAbgeschlossen(Boolean abgeschlossen);

	@Override
	public Ableger cloneWithOriginalValues();

}